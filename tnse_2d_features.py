# -*- coding: utf-8 -*-
"""tnse_2D_Features (1).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1C1aucgjY8IdY826PHzeq7dg2f8WsZJHN
"""

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.manifold import TSNE


# Load the dataset
X_train = pd.read_csv('X_train.csv')

# Reduce dimensionality using t-SNE
tsne = TSNE(n_components=2, random_state=42)
X_tsne = tsne.fit_transform(X_train)

# Create the plots
plt.figure(figsize=(12, 6))

plt.subplot(1, 2, 1)
plt.scatter(X_tsne[:, 0], X_tsne[:, 1], s=0.1) # reduced the size of each dot
plt.title('t-SNE Visualization')

plt.show()

import pandas as pd
import matplotlib.pyplot as plt
from sklearn.manifold import TSNE

# Load the dataset
X_train = pd.read_csv('X_train.csv')

# Assuming the first column is the cluster label
cluster_labels = X_train.iloc[:, 0]

# Reduce dimensionality using t-SNE
tsne = TSNE(n_components=2, random_state=42)
X_tsne = tsne.fit_transform(X_train.iloc[:, 1:]) # Apply t-SNE to features

# Create the plots
plt.figure(figsize=(12, 6))

# Use a colormap with more distinct colors (e.g., 'rainbow', 'jet', 'hsv')
plt.scatter(X_tsne[:, 0], X_tsne[:, 1], c=cluster_labels, s=1, cmap='rainbow') # Color by cluster
plt.title('t-SNE Visualization with Clusters (Rainbow)')
plt.colorbar(label='Cluster Label') # Add a colorbar to show cluster mapping

plt.show()

